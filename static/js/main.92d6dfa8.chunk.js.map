{"version":3,"sources":["Components/Form/Form.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","App.js","index.js"],"names":["Form","state","name","number","handleChange","e","currentTarget","value","setState","id","generate","handleSubmit","preventDefault","props","onSubmit","reset","this","htmlFor","nameInputId","type","onChange","phoneInputId","Component","ContactsRender","contactsList","onDelete","map","onClick","Filter","onFilterChanged","App","contacts","filter","addContact","contact","find","toLocaleLowerCase","alert","prevState","filterContactList","includes","rId","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","filteredContactList","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.92d6dfa8.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { generate } from 'short-id';\nimport s from './Form.module.css';\n\nexport default class Form extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({ id: generate(), [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label htmlFor={this.nameInputId}>\n          Name\n          <input\n            type=\"phone\"\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.handleChange}\n            id={this.nameInputId}\n          ></input>\n        </label>\n        <label htmlFor={this.phoneInputId}>\n          Number\n          <input\n            type=\"text\"\n            name=\"number\"\n            value={this.state.number}\n            onChange={this.handleChange}\n            id={this.phoneInputId}\n          ></input>\n        </label>\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n","export default function ContactsRender({ contactsList, onDelete }) {\n  return (\n    <>\n      <ul>\n        {contactsList &&\n          contactsList.map(({ id, name, number }) => (\n            <li key={id}>\n              <span>\n                {name} - {number}\n              </span>\n              <button type=\"button\" onClick={() => onDelete(id)}>\n                Delete\n              </button>\n            </li>\n          ))}\n      </ul>\n    </>\n  );\n}\n","const Filter = ({ onFilterChanged }) => {\n  const handleFilterChanged = e => {\n    const value = e.currentTarget.value;\n    onFilterChanged(value);\n  };\n\n  return (\n    <label>\n      Find contacts by name\n      <input type=\"text\" onChange={handleFilterChanged}></input>\n    </label>\n  );\n};\n\nexport default Filter;\n","import React, { Component } from 'react';\nimport Form from './Components/Form/Form';\nimport ContactList from './Components/ContactList/ContactList';\nimport Filter from './Components/Filter/Filter';\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n  k;\n  addContact = contact => {\n    const isFinded = this.state.contacts.find(\n      ({ name }) =>\n        name.toLocaleLowerCase() === contact.name.toLocaleLowerCase(),\n    );\n\n    if (isFinded) {\n      alert(`${contact.name} is already in the contacts`);\n      return;\n    }\n\n    this.setState(prevState => ({\n      contacts: [contact, ...prevState.contacts],\n    }));\n  };\n\n  onFilterChanged = filter => {\n    this.setState({ filter });\n  };\n\n  filterContactList = () => {\n    let { contacts, filter } = this.state;\n    filter = filter.toLocaleLowerCase();\n\n    return contacts.filter(({ name }) =>\n      name.toLocaleLowerCase().includes(filter),\n    );\n  };\n\n  onDelete = rId => {\n    let contacts = this.state.contacts.filter(\n      ({ id }) => id.toLocaleLowerCase() !== rId,\n    );\n\n    this.setState({ contacts });\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    const filteredContactList = this.filterContactList();\n\n    return (\n      <>\n        <Form onSubmit={this.addContact} />\n        <Filter onFilterChanged={this.onFilterChanged} />\n        <ContactList\n          contactsList={filteredContactList}\n          onDelete={this.onDelete}\n        />\n      </>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}